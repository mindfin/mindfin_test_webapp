import { Component, OnInit,ViewChild,Inject} from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { CommonService } from '../../common.service';
import { SuperadminService } from '../../superadmin.service';
// import { CommonService } from '../../superadmin.service';
// import { NotifierService } from 'angular-notifier';
import { PageEvent, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';
// import { Memberlist } from '../../../../models/booking.model';
import { SampleService } from '../../sample.service';
import {MatDialog,MAT_DIALOG_DATA,MatDialogConfig} from '@angular/material';
import { RejectDialogContent } from './membersapp.component';



@Component({
  selector: 'app-home',
  templateUrl: './pdlist.component.html',
})
export class PdlistComponent  {
	// private notifier: NotifierService;

  displayedColumns: string[] = ['date','id','source','name','cname','mobile','email','loantype','approval','reject'];
  samples:any;
  dataSource;

  constructor(private route:ActivatedRoute, private router:Router,
    // notifier: NotifierService ,
    private commonservice:CommonService, private service:SuperadminService,private excelservice:SampleService,public dialog: MatDialog) {		
      // this.notifier = notifier;
    }
    coins:any;
   @ViewChild(MatPaginator) paginator: MatPaginator;
    @ViewChild(MatSort) sort: MatSort;

  
fetchdata:any;
model:any = {};
aa:any;
// posts:Memberlist[] = [];
totalPosts = 0;
postsPerPage = 100;
currentPage = 1;
pageSizeOptions = [ 100, 300, 500];
isLoading = false;
emp = 2;
  ngOnInit() {
   

this.isLoading = true;
this.commonservice.getPdlist(this.postsPerPage, this.currentPage);
this.commonservice
.getPdlistDetails()
 .subscribe((postData: {posts: SuperadminService[], postCount: number})=> {
    this.totalPosts = postData.postCount;
    this.dataSource = new MatTableDataSource(postData.posts);
this.samples = postData.posts;
console.log(postData.posts);
this.isLoading = false;
this.dataSource.sort = this.sort;
console.log(this.dataSource.sort);

});

  
  }
  applyFilter(filterValue: string) {
    console.log(filterValue);
    this.dataSource.filter = filterValue.trim().toLowerCase();
  }
  onChangedPage(pageData: PageEvent) {
    this.isLoading = true;
    this.currentPage = pageData.pageIndex + 1;
    this.postsPerPage = pageData.pageSize;
    console.log(this.postsPerPage);
    this.commonservice.getPdlist(this.postsPerPage, this.currentPage);
  }
  
  data: any;

demo:any;
array=[];
abc:any;


 approvemember(element){
  console.log(element);
  this.commonservice.pdapprove(element);
}

// rejectmember(element)
// {
//   this.commonservice.rejectcustomer(element);

// }
openRejectDialog(element) {
  this.model = element;
  const dialogConfig = new MatDialogConfig();
  dialogConfig.data = { element };
  this.dialog.open(RejectDialogContent, dialogConfig
  );
  console.log(dialogConfig);
  }




// public showNotification(element): 
 
//  void {  
//     //  this.notifier.notify(element);

//    console.log(element);
//    this.commonservice.getaging(element).subscribe(res=>{
//     console.log(res);
//    })
// }

refresh(): void {
  window.location.reload();
}

viewbank(element){
  this.commonservice.viewbank1(element);
  }
 
  
  addbank(id){
    this.commonservice.addbank(id);
  
  }
  editcustomer(id){
  console.log(id);
  this.commonservice.editcustomer(id);
}



}



