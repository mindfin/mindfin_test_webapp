
    <mat-spinner *ngIf="isLoading"></mat-spinner>
    <div class="animated fadeIn" [hidden]="isLoading">
     <div class="row">
     
       <div class="col-lg-12">
         <div class="card">
           <div class="card-header">
             <i class="fa fa-align-justify"></i>APPROVED MEMBER LIST
       
           </div>
           <div class="card-body">
               <div class="table-responsive">
                   <mat-form-field>
                       <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Search">
                     </mat-form-field>
                     
             <table mat-table #table [dataSource]="dataSource" class="table table-striped responsive"  matSort> 
                       
              
              <ng-container matColumnDef="id">
                <th   *matHeaderCellDef mat-sort-header>CUSTOMER ID</th>
                <td   *matCellDef="let element" style="text-align:center;"> {{element.autoid}}<br/>
             
                       </td>
              </ng-container> 
                 
                <ng-container matColumnDef="name">
                 <th   *matHeaderCellDef mat-sort-header>MEMBER NAME</th>
                 <td   *matCellDef="let element" style="text-align:center;"> {{element.name}}<br/>
              
                        </td>
               </ng-container> 
            
   
               <ng-container matColumnDef="mobile">
                   <th  *matHeaderCellDef mat-sort-header>MOBILE</th>
                   <td  *matCellDef="let element"> {{element.mobile}} </td>
                 </ng-container> 
   
               <ng-container matColumnDef="email">
                   <th  *matHeaderCellDef mat-sort-header>EMAIL</th>
                   <td  *matCellDef="let element"> {{element.email}} </td>
                 </ng-container> 
               <!-- <ng-container matColumnDef="bankname">
                 <th *matHeaderCellDef mat-sort-header>BANK</th>
                 <td  *matCellDef="let element"> {{element.bankname.bankname}} </td>
               </ng-container>  -->
                     
       

                 <!-- <ng-container matColumnDef="addbank">
                   <th  *matHeaderCellDef mat-sort-header>ADD BANK</th>
                   <td  *matCellDef="let element">
                           <button mat-raised-button color="primary"
                         (click)="addbank(element.idapprovedcustomer)">
                    ADD BANK
                      </button> 
   
                     </td>
                 </ng-container> 
                 <ng-container matColumnDef="viewBank">
                   <th  *matHeaderCellDef mat-sort-header>VIEW BANK</th>
                   <td  *matCellDef="let element" >
                           <button mat-raised-button color="primary"
                         (click)="viewbank(element.idapprovedcustomer)">
                         VIEW BANK
                       </button> 
                       </td> -->
                 <!-- </ng-container>  -->
                 <!-- <ng-container matColumnDef="Reject">
                   <th  *matHeaderCellDef mat-sort-header>REJECT</th>
                   <td  *matCellDef="let element" >
                           <button mat-raised-button color="primary"
                            matBadgeColor="red" (click)="rejectmember(element);refresh();">
                         REJECT
                       </button> 
                     </td>
                 </ng-container>  -->
                <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
               <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr> 
           </table>
         </div>
           <mat-paginator [length]="totalPosts" [pageSize]="postsPerPage" [pageSizeOptions]="pageSizeOptions" (page)="onChangedPage($event)"></mat-paginator>
           </div>
         </div>
       </div>
     </div>
   </div>
   <style>
     table,th,td{
       border:1px solid black;
     }
     mat-spinner{
       margin: auto;
     }
   </style>
   
  